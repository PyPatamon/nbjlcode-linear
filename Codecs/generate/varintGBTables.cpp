#include <cstdint>
#include "Portability.h"

namespace Codecs {
namespace varintTables {

#if CODECS_X64 || defined(__i386__) || CODECS_PPC64
#if CODECS_AVX_PREREQ(2, 0) || CODECS_SSE_PREREQ(3, 1) 
extern const __m128i varintGB_SSSE3_shfl_msk_m128i[256] = {
	// desc = 0
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 1
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 2
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 3
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 4
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 5
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 6
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 7
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 8
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 9
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 10
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 11
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 12
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 13
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 14
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0xFF, 0xFF, 0xFF, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 15
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0xFF, 0xFF, 0xFF, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 16
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 17
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 18
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 19
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 20
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 21
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 22
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 23
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 24
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 25
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 26
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 27
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 28
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 29
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 30
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0xFF, 0xFF, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 31
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0A,
		0xFF, 0xFF, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 32
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 33
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 34
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 35
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 36
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 37
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 38
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 39
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 40
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 41
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 42
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 43
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0A,
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 44
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 45
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 46
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0A,
		0xFF, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 47
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0B,
		0xFF, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 48
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 49
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 50
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 51
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 52
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 53
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 54
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 55
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 56
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 57
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 58
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 59
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0B,
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 60
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 61
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 62
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0B,
		0x0A, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 63
	_mm_set_epi8(
		0xFF, 0xFF, 0xFF, 0x0C,
		0x0B, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 64
	_mm_set_epi8(
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 65
	_mm_set_epi8(
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 66
	_mm_set_epi8(
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 67
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 68
	_mm_set_epi8(
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 69
	_mm_set_epi8(
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 70
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 71
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 72
	_mm_set_epi8(
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 73
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 74
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 75
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 76
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 77
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 78
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0xFF, 0xFF, 0xFF, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 79
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0xFF, 0xFF, 0xFF, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 80
	_mm_set_epi8(
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 81
	_mm_set_epi8(
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 82
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 83
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 84
	_mm_set_epi8(
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 85
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 86
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 87
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 88
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 89
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 90
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 91
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 92
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 93
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 94
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0xFF, 0xFF, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 95
	_mm_set_epi8(
		0xFF, 0xFF, 0x0B, 0x0A,
		0xFF, 0xFF, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 96
	_mm_set_epi8(
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 97
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 98
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 99
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 100
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 101
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 102
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 103
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 104
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 105
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 106
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 107
	_mm_set_epi8(
		0xFF, 0xFF, 0x0B, 0x0A,
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 108
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 109
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 110
	_mm_set_epi8(
		0xFF, 0xFF, 0x0B, 0x0A,
		0xFF, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 111
	_mm_set_epi8(
		0xFF, 0xFF, 0x0C, 0x0B,
		0xFF, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 112
	_mm_set_epi8(
		0xFF, 0xFF, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 113
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 114
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 115
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 116
	_mm_set_epi8(
		0xFF, 0xFF, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 117
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 118
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 119
	_mm_set_epi8(
		0xFF, 0xFF, 0x0B, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 120
	_mm_set_epi8(
		0xFF, 0xFF, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 121
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 122
	_mm_set_epi8(
		0xFF, 0xFF, 0x0B, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 123
	_mm_set_epi8(
		0xFF, 0xFF, 0x0C, 0x0B,
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 124
	_mm_set_epi8(
		0xFF, 0xFF, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 125
	_mm_set_epi8(
		0xFF, 0xFF, 0x0B, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 126
	_mm_set_epi8(
		0xFF, 0xFF, 0x0C, 0x0B,
		0x0A, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 127
	_mm_set_epi8(
		0xFF, 0xFF, 0x0D, 0x0C,
		0x0B, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 128
	_mm_set_epi8(
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 129
	_mm_set_epi8(
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 130
	_mm_set_epi8(
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 131
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 132
	_mm_set_epi8(
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 133
	_mm_set_epi8(
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 134
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 135
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 136
	_mm_set_epi8(
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 137
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 138
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 139
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 140
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 141
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 142
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0xFF, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 143
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0xFF, 0xFF, 0xFF, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 144
	_mm_set_epi8(
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 145
	_mm_set_epi8(
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 146
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 147
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 148
	_mm_set_epi8(
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 149
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 150
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 151
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 152
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 153
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 154
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 155
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 156
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 157
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 158
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0xFF, 0xFF, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 159
	_mm_set_epi8(
		0xFF, 0x0C, 0x0B, 0x0A,
		0xFF, 0xFF, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 160
	_mm_set_epi8(
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 161
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 162
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 163
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 164
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 165
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 166
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 167
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 168
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 169
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 170
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 171
	_mm_set_epi8(
		0xFF, 0x0C, 0x0B, 0x0A,
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 172
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 173
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 174
	_mm_set_epi8(
		0xFF, 0x0C, 0x0B, 0x0A,
		0xFF, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 175
	_mm_set_epi8(
		0xFF, 0x0D, 0x0C, 0x0B,
		0xFF, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 176
	_mm_set_epi8(
		0xFF, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 177
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 178
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 179
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 180
	_mm_set_epi8(
		0xFF, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 181
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 182
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 183
	_mm_set_epi8(
		0xFF, 0x0C, 0x0B, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 184
	_mm_set_epi8(
		0xFF, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 185
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 186
	_mm_set_epi8(
		0xFF, 0x0C, 0x0B, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 187
	_mm_set_epi8(
		0xFF, 0x0D, 0x0C, 0x0B,
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 188
	_mm_set_epi8(
		0xFF, 0x0B, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 189
	_mm_set_epi8(
		0xFF, 0x0C, 0x0B, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 190
	_mm_set_epi8(
		0xFF, 0x0D, 0x0C, 0x0B,
		0x0A, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 191
	_mm_set_epi8(
		0xFF, 0x0E, 0x0D, 0x0C,
		0x0B, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 192
	_mm_set_epi8(
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 193
	_mm_set_epi8(
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 194
	_mm_set_epi8(
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 195
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 196
	_mm_set_epi8(
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 197
	_mm_set_epi8(
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 198
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 199
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 200
	_mm_set_epi8(
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 201
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 202
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 203
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0xFF, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 204
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0xFF, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 205
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0xFF, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 206
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0xFF, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 207
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0xFF, 0xFF, 0xFF, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 208
	_mm_set_epi8(
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 209
	_mm_set_epi8(
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 210
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 211
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 212
	_mm_set_epi8(
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 213
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 214
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 215
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 216
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 217
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 218
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 219
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0xFF, 0xFF, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 220
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0xFF, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 221
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0xFF, 0xFF, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 222
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0xFF, 0xFF, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 223
	_mm_set_epi8(
		0x0D, 0x0C, 0x0B, 0x0A,
		0xFF, 0xFF, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 224
	_mm_set_epi8(
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 225
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 226
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 227
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 228
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 229
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 230
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 231
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 232
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 233
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 234
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 235
	_mm_set_epi8(
		0x0D, 0x0C, 0x0B, 0x0A,
		0xFF, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 236
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0xFF, 0x07, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 237
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0xFF, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 238
	_mm_set_epi8(
		0x0D, 0x0C, 0x0B, 0x0A,
		0xFF, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 239
	_mm_set_epi8(
		0x0E, 0x0D, 0x0C, 0x0B,
		0xFF, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 240
	_mm_set_epi8(
		0x09, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0xFF, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 241
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0xFF, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 242
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0xFF, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 243
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0xFF, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 244
	_mm_set_epi8(
		0x0A, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0xFF, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 245
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0xFF, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 246
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0xFF, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 247
	_mm_set_epi8(
		0x0D, 0x0C, 0x0B, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0xFF, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 248
	_mm_set_epi8(
		0x0B, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0xFF, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 249
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0xFF, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 250
	_mm_set_epi8(
		0x0D, 0x0C, 0x0B, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0xFF, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 251
	_mm_set_epi8(
		0x0E, 0x0D, 0x0C, 0x0B,
		0x0A, 0x09, 0x08, 0x07,
		0xFF, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
	// desc = 252
	_mm_set_epi8(
		0x0C, 0x0B, 0x0A, 0x09,
		0x08, 0x07, 0x06, 0x05,
		0x04, 0x03, 0x02, 0x01,
		0xFF, 0xFF, 0xFF, 0x00),
	// desc = 253
	_mm_set_epi8(
		0x0D, 0x0C, 0x0B, 0x0A,
		0x09, 0x08, 0x07, 0x06,
		0x05, 0x04, 0x03, 0x02,
		0xFF, 0xFF, 0x01, 0x00),
	// desc = 254
	_mm_set_epi8(
		0x0E, 0x0D, 0x0C, 0x0B,
		0x0A, 0x09, 0x08, 0x07,
		0x06, 0x05, 0x04, 0x03,
		0xFF, 0x02, 0x01, 0x00),
	// desc = 255
	_mm_set_epi8(
		0x0F, 0x0E, 0x0D, 0x0C,
		0x0B, 0x0A, 0x09, 0x08,
		0x07, 0x06, 0x05, 0x04,
		0x03, 0x02, 0x01, 0x00),
};
#endif /* __AVX2__ || __SSSE3__ */

// Number of bytes for the group described by desc.
extern const uint8_t varintGBInputOffsets[256] = {
	 5,  6,  7,  8,  6,  7,  8,  9,  7,  8,  9, 10,  8,  9, 10, 11, 
	 6,  7,  8,  9,  7,  8,  9, 10,  8,  9, 10, 11,  9, 10, 11, 12, 
	 7,  8,  9, 10,  8,  9, 10, 11,  9, 10, 11, 12, 10, 11, 12, 13, 
	 8,  9, 10, 11,  9, 10, 11, 12, 10, 11, 12, 13, 11, 12, 13, 14, 
	 6,  7,  8,  9,  7,  8,  9, 10,  8,  9, 10, 11,  9, 10, 11, 12, 
	 7,  8,  9, 10,  8,  9, 10, 11,  9, 10, 11, 12, 10, 11, 12, 13, 
	 8,  9, 10, 11,  9, 10, 11, 12, 10, 11, 12, 13, 11, 12, 13, 14, 
	 9, 10, 11, 12, 10, 11, 12, 13, 11, 12, 13, 14, 12, 13, 14, 15, 
	 7,  8,  9, 10,  8,  9, 10, 11,  9, 10, 11, 12, 10, 11, 12, 13, 
	 8,  9, 10, 11,  9, 10, 11, 12, 10, 11, 12, 13, 11, 12, 13, 14, 
	 9, 10, 11, 12, 10, 11, 12, 13, 11, 12, 13, 14, 12, 13, 14, 15, 
	10, 11, 12, 13, 11, 12, 13, 14, 12, 13, 14, 15, 13, 14, 15, 16, 
	 8,  9, 10, 11,  9, 10, 11, 12, 10, 11, 12, 13, 11, 12, 13, 14, 
	 9, 10, 11, 12, 10, 11, 12, 13, 11, 12, 13, 14, 12, 13, 14, 15, 
	10, 11, 12, 13, 11, 12, 13, 14, 12, 13, 14, 15, 13, 14, 15, 16, 
	11, 12, 13, 14, 12, 13, 14, 15, 13, 14, 15, 16, 14, 15, 16, 17, 
};

// Length of each encoded integer in the group described by desc.
extern const uint8_t varintGBLengths[256][4] = {
	{1, 1, 1, 1}, // desc = 0
	{2, 1, 1, 1}, // desc = 1
	{3, 1, 1, 1}, // desc = 2
	{4, 1, 1, 1}, // desc = 3
	{1, 2, 1, 1}, // desc = 4
	{2, 2, 1, 1}, // desc = 5
	{3, 2, 1, 1}, // desc = 6
	{4, 2, 1, 1}, // desc = 7
	{1, 3, 1, 1}, // desc = 8
	{2, 3, 1, 1}, // desc = 9
	{3, 3, 1, 1}, // desc = 10
	{4, 3, 1, 1}, // desc = 11
	{1, 4, 1, 1}, // desc = 12
	{2, 4, 1, 1}, // desc = 13
	{3, 4, 1, 1}, // desc = 14
	{4, 4, 1, 1}, // desc = 15
	{1, 1, 2, 1}, // desc = 16
	{2, 1, 2, 1}, // desc = 17
	{3, 1, 2, 1}, // desc = 18
	{4, 1, 2, 1}, // desc = 19
	{1, 2, 2, 1}, // desc = 20
	{2, 2, 2, 1}, // desc = 21
	{3, 2, 2, 1}, // desc = 22
	{4, 2, 2, 1}, // desc = 23
	{1, 3, 2, 1}, // desc = 24
	{2, 3, 2, 1}, // desc = 25
	{3, 3, 2, 1}, // desc = 26
	{4, 3, 2, 1}, // desc = 27
	{1, 4, 2, 1}, // desc = 28
	{2, 4, 2, 1}, // desc = 29
	{3, 4, 2, 1}, // desc = 30
	{4, 4, 2, 1}, // desc = 31
	{1, 1, 3, 1}, // desc = 32
	{2, 1, 3, 1}, // desc = 33
	{3, 1, 3, 1}, // desc = 34
	{4, 1, 3, 1}, // desc = 35
	{1, 2, 3, 1}, // desc = 36
	{2, 2, 3, 1}, // desc = 37
	{3, 2, 3, 1}, // desc = 38
	{4, 2, 3, 1}, // desc = 39
	{1, 3, 3, 1}, // desc = 40
	{2, 3, 3, 1}, // desc = 41
	{3, 3, 3, 1}, // desc = 42
	{4, 3, 3, 1}, // desc = 43
	{1, 4, 3, 1}, // desc = 44
	{2, 4, 3, 1}, // desc = 45
	{3, 4, 3, 1}, // desc = 46
	{4, 4, 3, 1}, // desc = 47
	{1, 1, 4, 1}, // desc = 48
	{2, 1, 4, 1}, // desc = 49
	{3, 1, 4, 1}, // desc = 50
	{4, 1, 4, 1}, // desc = 51
	{1, 2, 4, 1}, // desc = 52
	{2, 2, 4, 1}, // desc = 53
	{3, 2, 4, 1}, // desc = 54
	{4, 2, 4, 1}, // desc = 55
	{1, 3, 4, 1}, // desc = 56
	{2, 3, 4, 1}, // desc = 57
	{3, 3, 4, 1}, // desc = 58
	{4, 3, 4, 1}, // desc = 59
	{1, 4, 4, 1}, // desc = 60
	{2, 4, 4, 1}, // desc = 61
	{3, 4, 4, 1}, // desc = 62
	{4, 4, 4, 1}, // desc = 63
	{1, 1, 1, 2}, // desc = 64
	{2, 1, 1, 2}, // desc = 65
	{3, 1, 1, 2}, // desc = 66
	{4, 1, 1, 2}, // desc = 67
	{1, 2, 1, 2}, // desc = 68
	{2, 2, 1, 2}, // desc = 69
	{3, 2, 1, 2}, // desc = 70
	{4, 2, 1, 2}, // desc = 71
	{1, 3, 1, 2}, // desc = 72
	{2, 3, 1, 2}, // desc = 73
	{3, 3, 1, 2}, // desc = 74
	{4, 3, 1, 2}, // desc = 75
	{1, 4, 1, 2}, // desc = 76
	{2, 4, 1, 2}, // desc = 77
	{3, 4, 1, 2}, // desc = 78
	{4, 4, 1, 2}, // desc = 79
	{1, 1, 2, 2}, // desc = 80
	{2, 1, 2, 2}, // desc = 81
	{3, 1, 2, 2}, // desc = 82
	{4, 1, 2, 2}, // desc = 83
	{1, 2, 2, 2}, // desc = 84
	{2, 2, 2, 2}, // desc = 85
	{3, 2, 2, 2}, // desc = 86
	{4, 2, 2, 2}, // desc = 87
	{1, 3, 2, 2}, // desc = 88
	{2, 3, 2, 2}, // desc = 89
	{3, 3, 2, 2}, // desc = 90
	{4, 3, 2, 2}, // desc = 91
	{1, 4, 2, 2}, // desc = 92
	{2, 4, 2, 2}, // desc = 93
	{3, 4, 2, 2}, // desc = 94
	{4, 4, 2, 2}, // desc = 95
	{1, 1, 3, 2}, // desc = 96
	{2, 1, 3, 2}, // desc = 97
	{3, 1, 3, 2}, // desc = 98
	{4, 1, 3, 2}, // desc = 99
	{1, 2, 3, 2}, // desc = 100
	{2, 2, 3, 2}, // desc = 101
	{3, 2, 3, 2}, // desc = 102
	{4, 2, 3, 2}, // desc = 103
	{1, 3, 3, 2}, // desc = 104
	{2, 3, 3, 2}, // desc = 105
	{3, 3, 3, 2}, // desc = 106
	{4, 3, 3, 2}, // desc = 107
	{1, 4, 3, 2}, // desc = 108
	{2, 4, 3, 2}, // desc = 109
	{3, 4, 3, 2}, // desc = 110
	{4, 4, 3, 2}, // desc = 111
	{1, 1, 4, 2}, // desc = 112
	{2, 1, 4, 2}, // desc = 113
	{3, 1, 4, 2}, // desc = 114
	{4, 1, 4, 2}, // desc = 115
	{1, 2, 4, 2}, // desc = 116
	{2, 2, 4, 2}, // desc = 117
	{3, 2, 4, 2}, // desc = 118
	{4, 2, 4, 2}, // desc = 119
	{1, 3, 4, 2}, // desc = 120
	{2, 3, 4, 2}, // desc = 121
	{3, 3, 4, 2}, // desc = 122
	{4, 3, 4, 2}, // desc = 123
	{1, 4, 4, 2}, // desc = 124
	{2, 4, 4, 2}, // desc = 125
	{3, 4, 4, 2}, // desc = 126
	{4, 4, 4, 2}, // desc = 127
	{1, 1, 1, 3}, // desc = 128
	{2, 1, 1, 3}, // desc = 129
	{3, 1, 1, 3}, // desc = 130
	{4, 1, 1, 3}, // desc = 131
	{1, 2, 1, 3}, // desc = 132
	{2, 2, 1, 3}, // desc = 133
	{3, 2, 1, 3}, // desc = 134
	{4, 2, 1, 3}, // desc = 135
	{1, 3, 1, 3}, // desc = 136
	{2, 3, 1, 3}, // desc = 137
	{3, 3, 1, 3}, // desc = 138
	{4, 3, 1, 3}, // desc = 139
	{1, 4, 1, 3}, // desc = 140
	{2, 4, 1, 3}, // desc = 141
	{3, 4, 1, 3}, // desc = 142
	{4, 4, 1, 3}, // desc = 143
	{1, 1, 2, 3}, // desc = 144
	{2, 1, 2, 3}, // desc = 145
	{3, 1, 2, 3}, // desc = 146
	{4, 1, 2, 3}, // desc = 147
	{1, 2, 2, 3}, // desc = 148
	{2, 2, 2, 3}, // desc = 149
	{3, 2, 2, 3}, // desc = 150
	{4, 2, 2, 3}, // desc = 151
	{1, 3, 2, 3}, // desc = 152
	{2, 3, 2, 3}, // desc = 153
	{3, 3, 2, 3}, // desc = 154
	{4, 3, 2, 3}, // desc = 155
	{1, 4, 2, 3}, // desc = 156
	{2, 4, 2, 3}, // desc = 157
	{3, 4, 2, 3}, // desc = 158
	{4, 4, 2, 3}, // desc = 159
	{1, 1, 3, 3}, // desc = 160
	{2, 1, 3, 3}, // desc = 161
	{3, 1, 3, 3}, // desc = 162
	{4, 1, 3, 3}, // desc = 163
	{1, 2, 3, 3}, // desc = 164
	{2, 2, 3, 3}, // desc = 165
	{3, 2, 3, 3}, // desc = 166
	{4, 2, 3, 3}, // desc = 167
	{1, 3, 3, 3}, // desc = 168
	{2, 3, 3, 3}, // desc = 169
	{3, 3, 3, 3}, // desc = 170
	{4, 3, 3, 3}, // desc = 171
	{1, 4, 3, 3}, // desc = 172
	{2, 4, 3, 3}, // desc = 173
	{3, 4, 3, 3}, // desc = 174
	{4, 4, 3, 3}, // desc = 175
	{1, 1, 4, 3}, // desc = 176
	{2, 1, 4, 3}, // desc = 177
	{3, 1, 4, 3}, // desc = 178
	{4, 1, 4, 3}, // desc = 179
	{1, 2, 4, 3}, // desc = 180
	{2, 2, 4, 3}, // desc = 181
	{3, 2, 4, 3}, // desc = 182
	{4, 2, 4, 3}, // desc = 183
	{1, 3, 4, 3}, // desc = 184
	{2, 3, 4, 3}, // desc = 185
	{3, 3, 4, 3}, // desc = 186
	{4, 3, 4, 3}, // desc = 187
	{1, 4, 4, 3}, // desc = 188
	{2, 4, 4, 3}, // desc = 189
	{3, 4, 4, 3}, // desc = 190
	{4, 4, 4, 3}, // desc = 191
	{1, 1, 1, 4}, // desc = 192
	{2, 1, 1, 4}, // desc = 193
	{3, 1, 1, 4}, // desc = 194
	{4, 1, 1, 4}, // desc = 195
	{1, 2, 1, 4}, // desc = 196
	{2, 2, 1, 4}, // desc = 197
	{3, 2, 1, 4}, // desc = 198
	{4, 2, 1, 4}, // desc = 199
	{1, 3, 1, 4}, // desc = 200
	{2, 3, 1, 4}, // desc = 201
	{3, 3, 1, 4}, // desc = 202
	{4, 3, 1, 4}, // desc = 203
	{1, 4, 1, 4}, // desc = 204
	{2, 4, 1, 4}, // desc = 205
	{3, 4, 1, 4}, // desc = 206
	{4, 4, 1, 4}, // desc = 207
	{1, 1, 2, 4}, // desc = 208
	{2, 1, 2, 4}, // desc = 209
	{3, 1, 2, 4}, // desc = 210
	{4, 1, 2, 4}, // desc = 211
	{1, 2, 2, 4}, // desc = 212
	{2, 2, 2, 4}, // desc = 213
	{3, 2, 2, 4}, // desc = 214
	{4, 2, 2, 4}, // desc = 215
	{1, 3, 2, 4}, // desc = 216
	{2, 3, 2, 4}, // desc = 217
	{3, 3, 2, 4}, // desc = 218
	{4, 3, 2, 4}, // desc = 219
	{1, 4, 2, 4}, // desc = 220
	{2, 4, 2, 4}, // desc = 221
	{3, 4, 2, 4}, // desc = 222
	{4, 4, 2, 4}, // desc = 223
	{1, 1, 3, 4}, // desc = 224
	{2, 1, 3, 4}, // desc = 225
	{3, 1, 3, 4}, // desc = 226
	{4, 1, 3, 4}, // desc = 227
	{1, 2, 3, 4}, // desc = 228
	{2, 2, 3, 4}, // desc = 229
	{3, 2, 3, 4}, // desc = 230
	{4, 2, 3, 4}, // desc = 231
	{1, 3, 3, 4}, // desc = 232
	{2, 3, 3, 4}, // desc = 233
	{3, 3, 3, 4}, // desc = 234
	{4, 3, 3, 4}, // desc = 235
	{1, 4, 3, 4}, // desc = 236
	{2, 4, 3, 4}, // desc = 237
	{3, 4, 3, 4}, // desc = 238
	{4, 4, 3, 4}, // desc = 239
	{1, 1, 4, 4}, // desc = 240
	{2, 1, 4, 4}, // desc = 241
	{3, 1, 4, 4}, // desc = 242
	{4, 1, 4, 4}, // desc = 243
	{1, 2, 4, 4}, // desc = 244
	{2, 2, 4, 4}, // desc = 245
	{3, 2, 4, 4}, // desc = 246
	{4, 2, 4, 4}, // desc = 247
	{1, 3, 4, 4}, // desc = 248
	{2, 3, 4, 4}, // desc = 249
	{3, 3, 4, 4}, // desc = 250
	{4, 3, 4, 4}, // desc = 251
	{1, 4, 4, 4}, // desc = 252
	{2, 4, 4, 4}, // desc = 253
	{3, 4, 4, 4}, // desc = 254
	{4, 4, 4, 4}, // desc = 255
};
#endif /* x86[_64] */

} // namespace varintTables
} // namespace Codecs
